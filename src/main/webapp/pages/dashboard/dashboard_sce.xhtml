<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:h="http://java.sun.com/jsf/html">

	<section class="content-header" style="padding-left: 0px">
		
		<p:panel id="panelTitleDashboard" styleClass="box-primary">
<!-- 			<p:spacer height="15px" /> -->
<!-- 			<h:form id="test"> -->
<!-- 				<p:remoteCommand id="rc" name="rc" -->
<!-- 					action="#{keycloakBean.buscaUser}" /> -->
<!-- 			</h:form> -->
			<p:panelGrid columns="2" columnsClasses="col-md-6, col-md-6"
				layout="grid">
				<h:panelGroup>
					<p:commandLink
						actionListener="#{equipamentoBean.redirecionaConsulta}">
						<div class="info-box">
							<span class="info-box-icon bg-green"><i
								class="icon ion-stats-bars"></i></span>
							<div class="info-box-content">
								<span class="info-box-number">Consulta Situação de
									Equipamentos</span> <span class="info-box-text"><b>STATUS:
								</b>EM DESENVOLVIMENTO</span>
							</div>
						</div>
					</p:commandLink>
				</h:panelGroup>
				<h:outputLabel/>

				<h:panelGroup>
					<p:commandLink
						actionListener="#{equipamentoBean.redirecionaPagina}">
						<div class="info-box">
							<span class="info-box-icon bg-blue"><i
								class="ion ion-document"></i></span>
							<div class="info-box-content">
								<span class="info-box-number">Entrada de Equipamento</span> <span
									class="info-box-text"> <b>STATUS: </b>EM DESENVOLVIMENTO
								</span>
							</div>
						</div>
					</p:commandLink>
				</h:panelGroup>
				<h:outputLabel/>
				
				<h:panelGroup>
<!-- 					<p:commandLink -->
<!-- 						actionListener="#{equipamentoBean.redirecionaPagina}"> -->
						<div class="info-box">
							<span class="info-box-icon bg-red"><i
								class="ion ion-wrench"></i></span>

							<div class="info-box-content">
								<span class="info-box-number">Manutenção de Equipamento</span> <span
									class="info-box-text"> <b>STATUS: </b>EM ANÁLISE
								</span>
							</div>
						</div>
<!-- 					</p:commandLink> -->
				</h:panelGroup>
			</p:panelGrid>
			<!-- </div> -->
		</p:panel>
	</section>


	<script type="text/javascript">
//<![CDATA[
	function remote(){
		rc();	
	}
	
	$(function () {

    'use strict';

    /* ChartJS
     * -------
     * Here we will create a few charts using ChartJS
     */

    //-----------------------
    //- MONTHLY SALES CHART -
    //-----------------------

    // Get context with jQuery - using jQuery's .get() method.
    var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var salesChart = new Chart(salesChartCanvas);

    var salesChartData = {
        labels: ["January", "February", "March", "April", "May", "June", "July"],
        datasets: [
            {
                label: "Electronics",
                fillColor: "rgb(210, 214, 222)",
                strokeColor: "rgb(210, 214, 222)",
                pointColor: "rgb(210, 214, 222)",
                pointStrokeColor: "#c1c7d1",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgb(220,220,220)",
                data: [65, 59, 80, 81, 56, 55, 40]
            },
            {
                label: "Digital Goods",
                fillColor: "rgba(60,141,188,0.9)",
                strokeColor: "rgba(60,141,188,0.8)",
                pointColor: "#3b8bba",
                pointStrokeColor: "rgba(60,141,188,1)",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(60,141,188,1)",
                data: [28, 48, 40, 19, 86, 27, 90]
            }
        ]
    };

    var salesChartOptions = {
        //Boolean - If we should show the scale at all
        showScale: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: false,
        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,
        //Boolean - Whether the line is curved between points
        bezierCurve: true,
        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.3,
        //Boolean - Whether to show a dot for each point
        pointDot: false,
        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,
        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,
        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,
        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,
        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,
        //Boolean - Whether to fill the dataset with a color
        datasetFill: true,
        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%=datasets[i].label%></li><%}%></ul>",
        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        maintainAspectRatio: true,
        //Boolean - whether to make the chart responsive to window resizing
        responsive: true
    };

    //Create the line chart
    salesChart.Line(salesChartData, salesChartOptions);

    //---------------------------
    //- END MONTHLY SALES CHART -
    //---------------------------


});
//]]>
</script>

</ui:composition>